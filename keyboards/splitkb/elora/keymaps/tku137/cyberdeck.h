#pragma once

#include QMK_KEYBOARD_H

#include <stdint.h>

// Pixel blink settings
// Blinking speed
#define BLINK_INTERVAL 1000 // Blinking interval in milliseconds

// WPM-based animation configuration
extern uint16_t target_wpm;
extern bool     display_wpm_mode;
extern uint32_t wpm_display_start_time;
#define DEFAULT_WPM 60          // Default WPM for the animation
#define BASE_HEIGHT 5           // Minimum column height when idle
#define MAX_COLUMN_HEIGHT 64    // Maximum column height
#define MAX_WOBBLE_HEIGHT 3     // Max height variation for wobble effect
#define WPM_WOBBLE_RATIO 20     // Adjust this ratio to control how much wobble effect increases with WPM
#define PEAK_WOBBLE_INTENSITY 1 // Maximum pixels the columns can shift
#define COLUMN_START_Y 103      // Y-coordinate for the columns
#define COLUMN1_START_X 13
#define COLUMN1_END_X 20
#define COLUMN2_START_X 27
#define COLUMN2_END_X 34
#define COLUMN3_START_X 41
#define COLUMN3_END_X 48
#define EEPROM_TARGET_WPM_ADDR (uint16_t *)0x0400 // EEPROM address to store target WPM

// OLED display configuration

// Render the keyboards currently active layer
// Use the start_row to render the layer status on a different row
// Uses custom bitmap in Cyberdeck style
void render_layer_status(uint8_t start_row);

// Render the status of the keyboard LEDs
// On MacOS, only Caps-Lock is supported
// Uses custom bitmap in Cyberdeck style
void render_led_status(uint8_t start_row);

// Render Command and Option modifier status
// Uses custom bitmap in Cyberdeck style
void render_modifier_cmd_opt(uint8_t mods);

// Render Control and Shift modifier status
// Uses custom bitmap in Cyberdeck style
void render_modifier_ctrl_shift(uint8_t mods);

// Render all modifier states in 2x2 grid
// Uses custom bitmap in Cyberdeck style
void render_modifiers(uint8_t start_row);

// Main render function that displays all information on the OLED
// The top Elora decorative part is 4u high
// At row 4, display the current active layer, which is a 2u image
// At row 6, display a 1u spacer connecting layer and modifiers
// At row 7, display the current active modifier keys. This is
// a 2x2 image consisting of two 2u images, so 4u in total
// At row 11, display a 2u spacer connecting modifiers and LEDs
// At row 13, display the current active LEDs. This is a 2u image
// At row 14, display a 1u decorative bottom image
void render_cyberdeck(void);

// These are the general interfaces. Define them to easily switch between different visuals
void render_master(void);
void render_slave(void);

// Bitmap Definitions

// 1: bitmap data for top static image
static const char PROGMEM top[] = {
    // '1_top_4u', 64x32px
    0xff, 0x01, 0x09, 0x01, 0x09, 0x01, 0x09, 0x01, 0x02, 0x84, 0xc4, 0xe4, 0x64, 0x64, 0x64, 0x64, 0x04, 0xe4, 0xe4, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe4, 0x64, 0x64, 0x64, 0x64, 0x64, 0xe4, 0xe4, 0x04, 0xe4, 0xe4, 0x64, 0x64, 0x64, 0x64, 0x64, 0xe4, 0xe4, 0x04, 0x04, 0x04, 0x84, 0xc4, 0xe4, 0x64, 0x64, 0xe4, 0xe4, 0x04, 0x04, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9e, 0x1f, 0x1b, 0x1b, 0x1b, 0x9b, 0x9b, 0x9b, 0x98, 0x80, 0x1f, 0x1f, 0x18, 0x18, 0x98, 0x98, 0x98, 0x9c, 0x9c, 0x00, 0x1f, 0x1f, 0x18, 0x98, 0x98, 0x98, 0x98, 0x9f, 0x1f, 0x00, 0x1f, 0x1f, 0x03, 0x03, 0x03, 0x87, 0x8f, 0x9d, 0x98, 0x80, 0x1e, 0x1f, 0x03, 0x83, 0x83, 0x83, 0x03, 0x9f, 0x1f, 0x00, 0x00, 0x80, 0x00, 0x80, 0x80, 0x00, 0xff,
    0x3f, 0x3f, 0xfb, 0xff, 0x3b, 0x3f, 0x3b, 0x3f, 0x1f, 0x0e, 0x04, 0x04, 0x04, 0x05, 0x07, 0x07, 0x07, 0x07, 0x06, 0x04, 0x04, 0x04, 0x05, 0x07, 0x07, 0x07, 0x07, 0x06, 0x04, 0x04, 0x04, 0x05, 0x07, 0x07, 0x07, 0x07, 0x06, 0x04, 0x04, 0x04, 0x08, 0x10, 0x1f, 0x12, 0x12, 0x16, 0x19, 0x10, 0x1e, 0x1b, 0x1a, 0x1a, 0x18, 0x10, 0x13, 0x16, 0x1c, 0x18, 0x1f, 0x10, 0x10, 0x1f, 0x10, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// 2a: bitmap data for base layer visualisation
static const char PROGMEM base[] = {
    // '2_layer_base_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x01, 0x03, 0x06, 0x0c, 0x18, 0x10, 0x10, 0x11, 0x13, 0x17, 0x17, 0x17, 0x17, 0x16, 0x14, 0x11, 0x13, 0x16, 0xd4, 0xd5, 0xd7, 0xd6, 0xd4, 0xd1, 0xd3, 0xd6, 0xd4, 0x15, 0x17, 0x16, 0x14, 0x91, 0xd3, 0xd6, 0xd4, 0xd5, 0xd7, 0x16, 0xd4, 0xd1, 0xd3, 0xd6, 0xd4, 0xd5, 0xd7, 0xd6, 0x14, 0x10, 0x10, 0x00, 0x00, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x3f, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3f, 0x39, 0x00, 0x3c, 0x3e, 0x07, 0x07, 0x07, 0x06, 0x06, 0x3f, 0x3f, 0x00, 0x33, 0x37, 0x36, 0x36, 0x36, 0x36, 0x3e, 0x3c, 0x38, 0x00, 0x3c, 0x3e, 0x37, 0x37, 0x37, 0x36, 0x36, 0x36, 0x30, 0x00, 0x00, 0x00,
};

// 2b: bitmap data for symbol layer visualisation
static const char PROGMEM symbol[] = {
    // '2_layer_symbol_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x01, 0x03, 0x06, 0x0c, 0x18, 0x10, 0x10, 0x11, 0x13, 0x16, 0x14, 0x15, 0x17, 0x16, 0x14, 0x11, 0x13, 0x17, 0xd7, 0xd7, 0xd7, 0xd6, 0xd4, 0xd1, 0xd3, 0xd6, 0x14, 0x15, 0xd7, 0xd6, 0x94, 0x11, 0x13, 0x16, 0x14, 0xd5, 0xd7, 0x16, 0xd4, 0xd1, 0xd3, 0xd6, 0x94, 0x15, 0xd7, 0xd6, 0xd4, 0xd0, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x37, 0x36, 0x36, 0x36, 0x36, 0x3e, 0x3c, 0x38, 0x00, 0x30, 0x31, 0x33, 0x37, 0x3e, 0x3e, 0x37, 0x33, 0x01, 0x00, 0x3f, 0x3f, 0x00, 0x01, 0x03, 0x07, 0x3f, 0x3f, 0x00, 0x01, 0x03, 0x07, 0x3e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 2c: bitmap data for navigation layer visualisation
static const char PROGMEM navigation[] = {
    // '2_layer_navigation_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x01, 0x03, 0x06, 0x0c, 0x18, 0x10, 0x10, 0x11, 0x13, 0x16, 0x14, 0x15, 0x17, 0x16, 0x14, 0x11, 0x13, 0x16, 0xd4, 0xd5, 0xd7, 0xd6, 0xd4, 0x91, 0x13, 0x17, 0x17, 0x17, 0x17, 0x16, 0x14, 0x91, 0xd3, 0xd6, 0xd4, 0xd5, 0xd7, 0x16, 0xd4, 0xd1, 0x13, 0x16, 0x14, 0x15, 0x17, 0xd6, 0xd4, 0x10, 0xd0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x3f, 0x00, 0x00, 0x01, 0x03, 0x07, 0x3e, 0x3c, 0x00, 0x3c, 0x3e, 0x07, 0x07, 0x07, 0x06, 0x06, 0x3f, 0x3f, 0x00, 0x03, 0x07, 0x0e, 0x1c, 0x38, 0x30, 0x30, 0x3f, 0x3f, 0x00, 0x3f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 2d: bitmap data for function layer visualisation
static const char PROGMEM function[] = {
    // '2_layer_function_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x01, 0x03, 0x06, 0x0c, 0x18, 0x10, 0x10, 0x11, 0x13, 0x16, 0x14, 0x15, 0x17, 0x16, 0x14, 0x11, 0x13, 0x16, 0xd4, 0xd5, 0xd7, 0xd6, 0xd4, 0xd1, 0xd3, 0xd6, 0xd4, 0x15, 0xd7, 0xd6, 0x14, 0x11, 0x13, 0x17, 0x17, 0xd7, 0xd7, 0x16, 0xd4, 0xd1, 0xd3, 0xd6, 0xd4, 0x95, 0x17, 0x16, 0x14, 0x10, 0xd0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x3f, 0x06, 0x06, 0x06, 0x06, 0x00, 0x01, 0x01, 0x00, 0x0f, 0x1f, 0x38, 0x30, 0x30, 0x30, 0x30, 0x3f, 0x3f, 0x00, 0x3f, 0x3f, 0x00, 0x00, 0x01, 0x03, 0x07, 0x3e, 0x3c, 0x00, 0x3f, 0x3f, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x01, 0x00, 0x00, 0x00,
};

// 2e: bitmap data for adjust layer visualisation
static const char PROGMEM adjust[] = {
    // '2_layer_adjust_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x01, 0x03, 0x06, 0x0c, 0x18, 0x10, 0x10, 0x11, 0x13, 0x16, 0x14, 0x15, 0x17, 0x16, 0x14, 0x11, 0x13, 0x16, 0x14, 0x15, 0x17, 0x96, 0xd4, 0xd1, 0xd3, 0xd6, 0xd4, 0x15, 0xd7, 0xd6, 0xd4, 0xd1, 0xd3, 0x96, 0x14, 0x15, 0x17, 0x16, 0x14, 0x11, 0x13, 0x17, 0x17, 0xd7, 0xd7, 0xd6, 0xd4, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3e, 0x07, 0x07, 0x07, 0x06, 0x06, 0x3f, 0x3f, 0x00, 0x3f, 0x3f, 0x30, 0x30, 0x31, 0x33, 0x37, 0x3e, 0x3c, 0x00, 0x38, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 3: bitmap data for spacer static image
static const char PROGMEM spacer1[] = {
    // '3_spacer_1u', 64x8px
    0x00, 0x00, 0xff, 0xff, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xc0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 4a: bitmap data for command OFF and option OFF visualisation
static const char PROGMEM cmd_off_opt_off[] = {
    // '4_modifier_cmd_off_alt_off_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x10, 0xc8, 0x28, 0x28, 0xc9, 0x0e, 0xc8, 0x28, 0x28, 0xc8, 0x10, 0x20, 0x00, 0x20, 0x10, 0x28, 0x28, 0x68, 0xc9, 0x0e, 0x08, 0x28, 0x28, 0x28, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x25, 0x25, 0x1f, 0x05, 0x1f, 0x25, 0x25, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x1c, 0x30, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 4b: bitmap data for command ON and option OFF visualisation
static const char PROGMEM cmd_on_opt_off[] = {
    // '4_modifier_cmd_on_alt_off_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x38, 0xd8, 0xd8, 0x39, 0xfe, 0x38, 0xd8, 0xd8, 0x38, 0xf0, 0xe0, 0x00, 0x20, 0x10, 0x28, 0x28, 0x68, 0xc9, 0x0e, 0x08, 0x28, 0x28, 0x28, 0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0xe7, 0xda, 0xda, 0xe0, 0xfa, 0xe0, 0xda, 0xda, 0xe7, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x1c, 0x30, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 4c: bitmap data for command OFF and option ON visualisation
static const char PROGMEM cmd_off_opt_on[] = {
    // '4_modifier_cmd_off_alt_on_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x10, 0xc8, 0x28, 0x28, 0xc9, 0x0e, 0xc8, 0x28, 0x28, 0xc8, 0x10, 0x20, 0x00, 0xe0, 0xf0, 0xd8, 0xd8, 0x98, 0x39, 0xfe, 0xf8, 0xd8, 0xd8, 0xd8, 0xf0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x25, 0x25, 0x1f, 0x05, 0x1f, 0x25, 0x25, 0x18, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0xf8, 0xe3, 0xcf, 0xdf, 0xdf, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 4c: bitmap data for command ON and option ON visualisation
static const char PROGMEM cmd_on_opt_on[] = {
    // '4_modifier_cmd_on_alt_on_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf0, 0x38, 0xd8, 0xd8, 0x39, 0xfe, 0x38, 0xd8, 0xd8, 0x38, 0xf0, 0xe0, 0x00, 0xe0, 0xf0, 0xd8, 0xd8, 0x98, 0x39, 0xfe, 0xf8, 0xd8, 0xd8, 0xd8, 0xf0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x7f, 0xe7, 0xda, 0xda, 0xe0, 0xfa, 0xe0, 0xda, 0xda, 0xe7, 0x7f, 0x3f, 0x00, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0xf8, 0xe3, 0xcf, 0xdf, 0xdf, 0x7f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 5a: bitmap data for control OFF and shift OFF visualisation
static const char PROGMEM ctrl_off_shift_off[] = {
    // '5_modifier_ctl_off_sft_off_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x30, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xb0, 0x18, 0x0c, 0x18, 0xb0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x20, 0x20, 0x20, 0xe0, 0x20, 0x20, 0x20, 0x20, 0x10, 0x08, 0x00, 0x08, 0x10, 0x20, 0x20, 0x2f, 0x28, 0xe8, 0x28, 0x2f, 0x20, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 5b: bitmap data for control ON and shift OFF visualisation
static const char PROGMEM ctrl_on_shift_off[] = {
    // '5_modifier_ctl_on_sft_off_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xfc, 0x7e, 0x3e, 0x9e, 0xce, 0xe6, 0xce, 0x9e, 0x3e, 0x7e, 0xfc, 0xf8, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xb0, 0x18, 0x0c, 0x18, 0xb0, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 0x3f, 0x3f, 0x3f, 0x3f, 0xff, 0x3f, 0x3f, 0x3f, 0x3f, 0x1f, 0x0f, 0x00, 0x08, 0x10, 0x20, 0x20, 0x2f, 0x28, 0xe8, 0x28, 0x2f, 0x20, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 5c: bitmap data for control OFF and shift ON visualisation
static const char PROGMEM ctrl_off_shift_on[] = {
    // '5_modifier_ctl_off_sft_on_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x30, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0xf8, 0x7c, 0x3e, 0x1e, 0x4e, 0xe6, 0xf2, 0xe6, 0x4e, 0x1e, 0x3e, 0x7c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x20, 0x20, 0x20, 0xe0, 0x20, 0x20, 0x20, 0x20, 0x10, 0x08, 0x00, 0x0f, 0x1f, 0x3f, 0x3f, 0x30, 0x37, 0xf7, 0x37, 0x30, 0x3f, 0x3f, 0x1f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 5d: bitmap data for control ON and shift ON visualisation
static const char PROGMEM ctrl_on_shift_on[] = {
    // '5_modifier_ctl_on_sft_on_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xfc, 0x7e, 0x3e, 0x9e, 0xce, 0xe6, 0xce, 0x9e, 0x3e, 0x7e, 0xfc, 0xf8, 0x00, 0xf8, 0x7c, 0x3e, 0x1e, 0x4e, 0xe6, 0xf2, 0xe6, 0x4e, 0x1e, 0x3e, 0x7c, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 0x3f, 0x3f, 0x3f, 0x3f, 0xff, 0x3f, 0x3f, 0x3f, 0x3f, 0x1f, 0x0f, 0x00, 0x0f, 0x1f, 0x3f, 0x3f, 0x30, 0x37, 0xf7, 0x37, 0x30, 0x3f, 0x3f, 0x1f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 6: bitmap data for spacer static image
static const char PROGMEM spacer2[] = {
    // '6_spacer_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x01, 0x03, 0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x06, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0xf0, 0x10, 0x10, 0x10, 0x30, 0x00, 0xc0, 0x60, 0x50, 0x50, 0xf0, 0x00, 0xf0, 0x50, 0x50, 0x50, 0x70, 0x00, 0x30, 0x50, 0x50, 0x50, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 7a: bitmap data for caps OFF visualisation
static const char PROGMEM caps_off[] = {
    // '7_caps_off_1u', 64x8px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x01, 0x03, 0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0x1f, 0x20, 0x40, 0x00, 0x00, 0x00, 0x40, 0x20, 0x1f, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x04, 0x04, 0x05, 0x04, 0x04, 0x04, 0x05, 0x04, 0x05, 0x04, 0x04, 0x04, 0x04, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

// 7b: bitmap data for caps ON visualisation
static const char PROGMEM caps_on[] = {
    // '7_caps_on_1u', 64x8px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x01, 0x03, 0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0x1f, 0x20, 0x4e, 0x1f, 0x1f, 0x1f, 0x4e, 0x20, 0x1f, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x04, 0x04, 0x05, 0x04, 0x04, 0x04, 0x05, 0x04, 0x05, 0x04, 0x04, 0x04, 0x04, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// 8: bitmap data for tku137 static image
static const char PROGMEM tku137[] = {
    // '8_spacer_2u', 64x16px
    0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0xf8, 0x08, 0x08, 0x00, 0xf8, 0x20, 0x20, 0x30, 0xc8, 0x00, 0x78, 0x80, 0x80, 0x80, 0xf8, 0x00, 0x08, 0xf8, 0x00, 0xa8, 0xa8, 0xa8, 0xb0, 0xe0, 0x08, 0x08, 0x18, 0x30, 0xe0, 0x00, 0x00, 0x03, 0x07, 0x0c, 0x18, 0x30, 0x70, 0xf0, 0xf0, 0xf0, 0xe0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0xc0, 0x80, 0xc0, 0x80, 0xc0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x90, 0x98, 0x9c, 0x9e, 0x9e, 0x8e, 0x86, 0x82, 0x90, 0x98, 0x9c, 0x9e, 0x9e, 0x8e, 0x46, 0x22, 0x10, 0x08, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x0a, 0x02, 0x0a, 0x02, 0x0a, 0x02,
};

// WPM Frames
static const char PROGMEM wpm_background[] = {
    // 'background_2', 64x128px
    0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x04, 0x04, 0x04, 0x84, 0xc4, 0xe4, 0x64, 0x64, 0x64, 0x64, 0x04, 0xe4, 0xe4, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0xe4, 0xe4, 0x64, 0x64, 0x64, 0x64, 0x64, 0xe4, 0xe4, 0x04, 0xe4, 0xe4, 0x64, 0x64, 0x64, 0x64, 0x64, 0xe4, 0xe4, 0x04, 0x04, 0x04, 0x84, 0xc4, 0xe4, 0x64, 0x64, 0xe4, 0xe2, 0x01, 0x09, 0x01, 0x09, 0x01, 0x09, 0x01, 0xff, 0xff, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x1e, 0x1f, 0x1b, 0x9b, 0x9b, 0x9b, 0x1b, 0x9b, 0x18, 0x00, 0x1f, 0x9f, 0x18, 0x98, 0x98, 0x18, 0x18, 0x1c, 0x1c, 0x00, 0x1f, 0x1f, 0x98, 0x98, 0x98, 0x98, 0x98, 0x1f, 0x1f, 0x00, 0x1f, 0x9f, 0x83, 0x83, 0x83, 0x87, 0x0f, 0x1d, 0x18, 0x00, 0x9e, 0x9f, 0x83, 0x83, 0x83, 0x03, 0x03, 0x1f, 0x1f, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x0f, 0x10, 0x1f, 0x12, 0x12, 0x16, 0x19, 0x10, 0x1e, 0x1b, 0x1a, 0x1a, 0x18, 0x10, 0x13, 0x16, 0x1c, 0x18, 0x1f,
    0x10, 0x10, 0x1f, 0x10, 0x08, 0x04, 0x04, 0x04, 0x06, 0x07, 0x07, 0x07, 0x07, 0x05, 0x04, 0x04, 0x04, 0x06, 0x07, 0x07, 0x07, 0x07, 0x05, 0x04, 0x04, 0x04, 0x06, 0x07, 0x07, 0x07, 0x07, 0x05, 0x04, 0x04, 0x04, 0x0e, 0x1f, 0x3f, 0x3b, 0x3f, 0x3b, 0xff, 0xfb, 0x3f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x40, 0x40, 0x60, 0x30, 0x7c, 0x40, 0x60, 0x30, 0x1c, 0x00, 0x7c, 0x14, 0x14, 0x14, 0x1c, 0x00, 0x7c, 0x04, 0x04, 0x0c, 0x18, 0x7c, 0x04, 0x0c, 0x18, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x30, 0x18, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x20, 0x20, 0x20, 0x38, 0x24, 0x22, 0x21, 0x21, 0x41, 0x81, 0x01, 0x81, 0x41, 0x21, 0x21, 0x21, 0x21, 0x39, 0x25, 0x23, 0x21, 0x21, 0x41, 0x81, 0x01,
    0x81, 0x41, 0x21, 0x21, 0x21, 0x21, 0x39, 0x25, 0x23, 0x21, 0x21, 0x41, 0x81, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x04, 0x04, 0x04, 0x1c, 0x24, 0x44, 0x84, 0x84, 0x82, 0x81, 0x80, 0x81, 0x82, 0x84, 0x84, 0x84, 0x84, 0x9c, 0xa4, 0xc4, 0x84, 0x84, 0x82, 0x81, 0x80, 0x81, 0x82, 0x84, 0x84, 0x84, 0x84, 0x9c, 0xa4, 0xc4, 0x84, 0x84, 0x82,
    0x81, 0x80, 0x80, 0x80, 0x80, 0xc0, 0x60, 0x30, 0x18, 0x0c, 0xff, 0xff, 0x00, 0x00, 0x08, 0x08, 0xf8, 0x08, 0x08, 0x00, 0xf8, 0x20, 0x20, 0x30, 0xc8, 0x00, 0x78, 0x80, 0x80, 0x80, 0xf8, 0x00, 0x08, 0xf8, 0x00, 0xa8, 0xa8, 0xa8, 0xb0, 0xe0, 0x08, 0x08, 0x18, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x02, 0x0a, 0x02, 0x0a, 0x02, 0x0a, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x08, 0x10, 0x22, 0x46, 0x8e, 0x9e, 0x9e, 0x9c, 0x98, 0x90, 0x82, 0x86, 0x8e, 0x9e, 0x9e, 0x9c, 0x98, 0x90, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc0, 0x80, 0xc0, 0x80, 0xc0, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0xf0, 0xf0, 0xf0, 0x70, 0x30, 0x18, 0x0c, 0x07, 0x03, 0x00, 0x00};

static const uint8_t PROGMEM digit_0[] = {
    // 'digit_0', 6x8px
    0x3c, 0x62, 0x52, 0x4a, 0x46, 0x3c,
};
static const uint8_t PROGMEM digit_1[] = {
    // 'digit_1', 6x8px
    0x00, 0x00, 0x00, 0x02, 0x7e, 0x00,
};
static const uint8_t PROGMEM digit_2[] = {
    // 'digit_2', 6x8px
    0x72, 0x52, 0x56, 0x5c, 0x58, 0x00,
};
static const uint8_t PROGMEM digit_3[] = {
    // 'digit_3', 6x8px
    0x42, 0x4a, 0x4e, 0x4c, 0x78, 0x00,
};
static const uint8_t PROGMEM digit_4[] = {
    // 'digit_4', 6x8px
    0x08, 0x0c, 0x0e, 0x0a, 0x7a, 0x00,
};
static const uint8_t PROGMEM digit_5[] = {
    // 'digit_5', 6x8px
    0x48, 0x4c, 0x4e, 0x4a, 0x7a, 0x00,
};
static const uint8_t PROGMEM digit_6[] = {
    // 'digit_6', 6x8px
    0x78, 0x4c, 0x4e, 0x4a, 0x7a, 0x00,
};
static const uint8_t PROGMEM digit_7[] = {
    // 'digit_7', 6x8px
    0x02, 0x02, 0x06, 0x0c, 0x78, 0x00,
};
static const uint8_t PROGMEM digit_8[] = {
    // 'digit_8', 6x8px
    0x78, 0x4c, 0x4e, 0x4a, 0x7e, 0x00,
};
static const uint8_t PROGMEM digit_9[] = {
    // 'digit_9', 6x8px
    0x48, 0x4c, 0x4e, 0x4a, 0x7e, 0x00};

static const uint8_t PROGMEM digit_empty[] = {
    // 'digit_empty', 6x8px
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
